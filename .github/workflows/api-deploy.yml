name: Deploy API

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "pyproject.toml" # we consider version has been bumped

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check-out repository
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        env:
          POETRY_VIRTUALENVS_CREATE: false
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry install --no-cache --no-interaction

      - name: Build Python script
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: maimai_py/api.py
          mode: app

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }} Build
          path: |
            build/*.exe
            build/*.bin
            build/*.app/**/*
          include-hidden-files: true

      - name: Release for Linux
        if: runner.os == 'Linux'
        uses: svenstaro/upload-release-action@v2
        with:
          tag: latest
          prerelease: false
          overwrite: true
          file: build/app.bin
          asset_name: maimai.py-linux-amd64
          release_name: Release $(git rev-parse --short "$GITHUB_SHA")
          repo_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Release for Windows
        if: runner.os == 'Windows'
        uses: svenstaro/upload-release-action@v2
        with:
          tag: latest
          prerelease: false
          overwrite: true
          file: build/app.exe
          asset_name: maimai.py-windows-amd64.exe
          release_name: Release $(git rev-parse --short "$GITHUB_SHA")
